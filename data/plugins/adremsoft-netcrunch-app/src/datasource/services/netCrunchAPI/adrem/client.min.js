/* Adrem Client v6.35 2024 Copyright Tomasz Kunicki, AdRem Software, all rights reserved */
(function(global,factory){"use strict";let url;if(typeof define==="function"&&define.amd){url=decodeURIComponent(global.location.pathname);define("client",["jquery"],function(jQuery){return factory(global,jQuery,url,false)})}else{url=global.location!=null?decodeURIComponent(global.location.pathname):"";return factory(global,global.jQuery,url,global.process!=null&&global.process.versions!=null&&global.process.versions.node!=null)}})(globalThis,function(global,jQuery,locationUrl,isNodeJS){"use strict";const adrem=global.adrem||{};let httpRequest,httpURL,fs;if(adrem.defined){return adrem}adrem.defined=true;adrem.isEmbedded||=typeof global.__SendRequest==="function";adrem.isNodeJS=isNodeJS;adrem.isBrowser=global.window!=null&&global.fetch!=null;adrem.isWorker=global.WorkerGlobalScope;adrem.isCloud=!adrem.isEmbedded&&!adrem.isWorker&&global.sessionStorage?.getItem("client:useMessageChannel");if(!adrem.isNodeJS&&adrem.isWorker&&global.fetch){adrem.isBrowser=true}adrem.pageUrl=locationUrl;adrem.useWebSockets=!adrem.isEmbedded&&global.WebSocket!=null;adrem.traceLocalRequest=false;adrem.traceEvents=false;adrem.reloadOnLogout=true;adrem.defaultRequestTimeout=15*1e3;const class2type={};"Boolean,Number,String,Function,Array,Date,RegExp,Object,Error,Symbol".split(",").forEach(name=>class2type["[object "+name+"]"]=name.toLowerCase());if(isNodeJS&&!adrem.isEmbedded){const _require=global["require"];const _path=_require("path");fs=_require("fs");if(fs.existsSync(_path.join(__dirname,"webapp.js"))){_require("./webapp.js");adrem.isEmbedded=true}else{httpURL=_require("url")}}function isArgumentsAsObject(arg){return typeof arg==="object"&&(typeof arg.params==="object"||typeof arg.callback==="function")}function isPlainObject(obj){function isWindow(o){return o!=null&&o===o.window}function toType(obj){if(obj==null){return obj+""}return typeof obj==="object"||typeof obj==="function"?class2type[class2type.toString.call(obj)]||"object":typeof obj}if(toType(obj)!=="object"||obj.nodeType||isWindow(obj)){return false}if(obj.constructor&&!hasOwnProperty.call(obj.constructor.prototype,"isPrototypeOf")){return false}return true}adrem.extend=function(){let options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1;const length=arguments.length;let deep=false;if(typeof target==="boolean"){deep=target;target=arguments[1]||{};i=2}if(typeof target!=="object"&&typeof target!=="function"){target={}}if(length===i){target=this;--i}for(;i<length;i++){if((options=arguments[i])!=null){for(name in options){src=target[name];copy=options[name];if(target===copy){continue}if(deep&&copy&&(isPlainObject(copy)||(copyIsArray=Array.isArray(copy)))){if(copyIsArray){copyIsArray=false;clone=src&&Array.isArray(src)?src:[]}else{clone=src&&isPlainObject(src)?src:{}}target[name]=adrem.extend(deep,clone,copy)}else if(copy!==undefined){target[name]=copy}}}}return target};function findObj(namespace,root){const path=namespace.split(".");let i,len,obj=root||global,prop;for(i=0,len=path.length;i<len;i+=1){prop=path[i];if(obj[prop]===undefined){obj[prop]={}}obj=obj[prop]}return obj}function beginGroup(message){if(console.group){console.group(message)}else{console.log(message)}}function endGroup(){if(console.groupEnd){console.groupEnd()}}function traceResponse(request,response){const data=typeof response==="string"?JSON.parse(response):response;beginGroup("<-- Response "+request.url);if(Array.isArray(data)&&console.table!=null){console.table(data)}else{console.log(data)}endGroup()}function embeddedRequestHandler(client,request,handler){function _handleResponse(status,response){if(typeof response==="string"){handler({responseText:response||""},status)}else{handler({response:response},status)}}if(adrem.traceLocalRequest){beginGroup("--\x3e Request "+request.url);console.log(request);endGroup()}if(!request.noResponse){global.__SendRequest(request.url,request.intf,request.method,JSON.stringify(request.data),function(status,response){if(adrem.traceLocalRequest){traceResponse(request,response)}_handleResponse(status,response)})}else{global.__SendRequest(request.url,request.intf,request.method,JSON.stringify(request.data));_handleResponse(true,{result:null})}}function localRequestHandler(client,request,handler){if(adrem.traceLocalRequest){beginGroup("--\x3e Request "+request.url);console.log(request);endGroup()}global.__LocalRequest(request.url,request.intf,request.method,JSON.stringify(request.data),function(status,response){if(adrem.traceLocalRequest){traceResponse(request,response)}if(typeof response==="string"){handler({responseText:response||""},status)}else{handler({response:response},status)}})}function ajaxRequestHandler(client,request,callback){const method=request.method!==undefined?request.intf+"."+request.method:undefined;function browserRequest(request,callback){let url=client.urlPrefix+request.url+(method!=null?"&method="+method:"");const controller=new global.AbortController,timer=setTimeout(()=>controller.abort(),request.timeout||adrem.defaultRequestTimeout);if(client.urlFilter!=null&&typeof client.urlFilter==="function"){url=client.urlFilter(url)||url}url=url.replace("//","/");fetch(url,{body:JSON.stringify(request.data),cache:"no-cache",headers:Object.assign({"Content-Type":"application/json","Cache-Control":"no-cache","x-sid":client.sid||""},request.headers),method:request.data===undefined||request.data===null?"GET":"POST",redirect:"error",signal:controller.signal}).then(async response=>{if(response==null||!response.ok&&response.status===449){if(client.connection.reloadOnLogout){global.location.reload()}}else{response.response=await response.json()}return response}).then(response=>{if(response!=null){callback(response,response.ok)}}).catch(()=>{callback({status:0,statusText:"timeout",ok:false},false)}).finally(()=>clearTimeout(timer))}function nodeJSRequest(request,callback){let path,url;const requestParts=request.url.split("?"),queryString={};if(request.url[0]!=="/"){url=client.connection.pageUrl+requestParts[0]}else{path=httpURL.parse(client.connection.pageUrl);path.pathname=requestParts[0];url=httpURL.format(path)}if(method!==undefined&&method!==""){queryString.method=method}if(requestParts.length>1){requestParts[1].split("&").map(p=>p.split("=")).forEach(([name,val])=>queryString[name]=val)}if(client.urlFilter!=null&&typeof client.urlFilter==="function"){url=client.urlFilter(url)||url}if(!httpRequest){console.trace("HTTP Request support not found");callback({},false)}httpRequest(url,{method:request.data===undefined||request.data===null?"GET":"POST",timeout:request.timeout||adrem.defaultRequestTimeout,qs:queryString,gzip:true,json:request.data,strictSSL:false,headers:{"x-sid":client.sid||""}},function(err,response,body){client.lastError=undefined;if(response!=null&&response.statusCode===200){if(typeof body!=="string"){body=JSON.stringify(body)}callback({responseText:body},true)}else{client.lastError=err;callback({},false)}})}if(adrem.isBrowser){browserRequest(request,callback)}else if(adrem.isNodeJS){nodeJSRequest(request,callback)}else{console.error("No xhr library found");throw"No xhr library found"}}class AdRemLocalProvider{constructor(requestHandler,connection){this.connection=connection||adrem;this.requestHandler=requestHandler;global.__dispatchEvents=function(events){if(adrem.traceEvents){console.log(">> Events Received >> ",events)}try{if(!Array.isArray(events)){connection.Client.fireEvent(events.name,events)}else{events.forEach(ev=>connection.Client.fireEvent(ev.name,ev))}}catch(e){console.error(e.stack)}}}request(request){request.queue=true;this.requestHandler(this.connection.Client,request,(response,success)=>request.callback(request,response,success))}}function AdRemRemoteProvider(requestHandler,retentionTime,connection){let tid=1;const aTime=retentionTime||25,me=this,apiGroups=[];let timerId=null;this.connection=connection||adrem;this.changeRequestHandler=function(handler){requestHandler=handler};function scheduleTasks(aTask){if(timerId==null){timerId=global.setTimeout(()=>{timerId=null;aTask()},aTime)}}function doProcessRequests(url,requests,onFinished){requestHandler(connection.Client,{url:url,data:requests.map(rq=>{rq.tid=tid;tid+=1;return{action:rq.intf,method:rq.method,data:rq.data,tid:rq.tid}}),scope:me},function(pendingRequests){return function(response,success){if(success){const baseTid=pendingRequests[0].tid;let responses=response.responseText!=null?JSON.parse(response.responseText):response.response;responses=Array.isArray(responses)?responses:[responses];for(let i=0,len=responses.length;i<len;i+=1){const rq=pendingRequests[responses[i].tid-baseTid];rq.callback(rq,{response:responses[i]},success)}}else{for(let i=0,len=pendingRequests.length;i<len;i+=1){const rq=pendingRequests[i];rq.callback(rq,{responseText:response.responseText,statusText:response.statusText},success)}}onFinished()}}(requests))}function processRequests(){apiGroups.forEach(g=>{if(!g.pending&&g.requests.length>0){const list=g.requests;g.requests=[];doProcessRequests(g.url,list,()=>{g.pending=false;if(g.requests.length>0){processRequests()}})}})}function groupRequest(rq){let group=apiGroups.find(g=>g.url===rq.url);if(group==null){group={url:rq.url,pending:false,requests:[]};apiGroups.push(group)}group.requests.push(rq)}this.request=function(request){groupRequest(request);scheduleTasks(processRequests)}}function AdremPollingProvider(api,requestHandler,client){const pollingTime=api.interval||50,errorPollingTime=1e3;this.dispatchEvents=(response,success)=>{const reply=success?response.response||JSON.parse(response.responseText):null;if(success&&reply!=null){if(Array.isArray(reply)){for(let i=0,len=reply.length;i<len;i+=1){const rp=reply[i];const name=rp?.name?.toLowerCase();if(name!=null&&client.hasListener(name)){try{client.fireEvent(name,rp)}catch(e){console.error(e)}}}}else{const name=reply?.name?.toLowerCase();if(name!=null&&client.hasListener(name)){try{client.fireEvent(name,reply)}catch(e){console.error(e)}}}if(!client.connection.webSocketsMode()){global.setTimeout(pollEvents,pollingTime)}}else if(!client.connection.webSocketsMode()){global.setTimeout(pollEvents,errorPollingTime)}};const pollEvents=()=>{requestHandler(client,{url:this.api.url,timeout:this.api.timeout||6e4,scope:this},(response,success)=>this.dispatchEvents(response,success))};this.api=api;if(!client.connection.webSocketsMode()){global.setTimeout(()=>{if(!client.connection.webSocketsMode()){pollEvents()}},500)}}class AdRemMessagingProvider{constructor(httpProvider){this.lastTid=1;this.client=httpProvider.connection.Client||adrem.Client;this.pending=new Map;this.channel=null;this._onUnload=this._onUnload.bind(this);this._messageHandler=this._messageHandler.bind(this);if(!isNodeJS){window.addEventListener("beforeunload",this._onUnload)}}initMessageChannel(){}_messageHandler(){}_onUnload(){}}class AdRemWebSocketProvider extends AdRemMessagingProvider{constructor(httpProvider){super(httpProvider);this.url="";this.httpRequest=httpProvider;this.waitQueue=[];this._wasConnected=false;this._retries=0;this._closeHandler=this._closeHandler.bind(this);this._openHandler=this._openHandler.bind(this);this._messageHandler=this._messageHandler.bind(this);this._errorHandler=this._errorHandler.bind(this);this._unloaded=false;this.client.connection.webSocketsMode=()=>this.client.connection.useWebSockets&&this.channel!=null}_onUnload(){if(this.channel!=null){if(this._wasConnected){this.channel.close(3001,"navigate")}this._finalize();this._unloaded=true}}initMessageChannel(){const wsProtocol=global.location.protocol.toUpperCase()==="HTTPS:"?"wss://":"ws://";if(this.client.connection.useWebSockets&&this.channel==null){if(this.client.sid==null||this.client.sid===0||this.client.sid===""){console.warn("WebSocket: Missing SID ",this.client);this.channel=undefined;return false}const appUrl=this.client.urlPrefix||"";try{const url=appUrl||(locationUrl[locationUrl.length-1]==="/"?locationUrl:locationUrl.split("/").slice(0,-1).join("/")+"/");this.channel=new global.WebSocket(wsProtocol+this.client.connection.$host+url+this.client.sid);this.channel.addEventListener("open",this._openHandler);this.channel.addEventListener("error",this._errorHandler);this.channel.addEventListener("close",this._closeHandler);this.channel.addEventListener("message",this._messageHandler);return true}catch(e){console.warn("WebSocket: Opening error ",e);this.client.connection.useWebSockets=false;this._finalize();return false}}return this.client.connection.useWebSockets}_openHandler(){this._wasConnected=true;this._retries=0;this._flush()}_retry(err){if(this._wasConnected&&this._retries<2){this._retries+=1;this.initMessageChannel()}else if(console){this.client.connection.useWebSockets=false;console.log("WebSocket failed, falling back to AJAX RPC!",err);this._flush()}}_errorHandler(err){console.warn("WebSocket: error ",err);this._finalize();this._retry(err)}_closeHandler(e){if(console){this.client.fireEvent("connection-closed")}this._finalize();if(e.code===1006){this._retry("")}}_messageHandler(ev){const[prefix,data]=ev.data.split("");if(this.channel==null){return}try{if(prefix==="e"){this.client.connection.api.events.provider.dispatchEvents({responseText:data},true)}else if(prefix==="r"){const response=JSON.parse(data);const request=this.pending.get(response.tid);if(request){this.pending.delete(response.tid);request.callback(request,{response:response},response.error==null)}else{console.warn("Missing request for response ",response)}}else if(prefix==="x"){}else{console.warn("WebSocket: Invalid message prefix received");this.channel.close(3002,"protocol");this.client.fireEvent("connection-closed")}}catch(e){console.error(e)}}_finalize(){if(this.channel){this.channel.removeEventListener("error",this._errorHandler);this.channel.removeEventListener("open",this._openHandler);this.channel.removeEventListener("close",this._closeHandler);this.channel.removeEventListener("message",this._messageHandler)}this.channel=undefined}_flush(){const queue=this.waitQueue.slice(0);this.waitQueue.length=0;queue.forEach(r=>this._doRequest(r))}_doRequest(request){const api=request.url.split("=")[1];if(this.client.connection.useWebSockets&&this.channel==null&&this._unloaded){console.log("WebSocket re-initialized");this.initMessageChannel()}if(this.client.connection.webSocketsMode()){if(this.channel.readyState===this.channel.OPEN){this.lastTid+=1;const rq={dat:request.data,call:request.intf+"."+request.method,tid:this.lastTid,proc:request.noResponse?true:undefined};if(!rq.proc){this.pending.set(this.lastTid,request)}else{request.callback(request,{response:{}},true)}this.channel.send(api+""+JSON.stringify(rq))}else{this.waitQueue.push(request)}}else{this.httpRequest.request(request)}}request(request){if(this.client.connection.useWebSockets&&this.channel!=null&&this.channel.readyState!==this.channel.OPEN){this.waitQueue.push(request)}else{this._doRequest(request)}}}class AdRemServiceWorkerProvider extends AdRemMessagingProvider{constructor(httpProvider){super(httpProvider);this.client.connection.webSocketsMode=()=>true;this._messageHandler=this._messageHandler.bind(this)}initMessageChannel(){if(this.channel==null){this.channel=new BroadcastChannel("client:"+this.client.sid);this.channel.addEventListener("message",this._messageHandler)}}_messageHandler({data}){if(data.m==="rq"||data.m==="end"){return}try{if(data.m==="e"){const events=typeof data.data==="string"?JSON.parse(data.data):data.data;this.client.connection.api.events.provider.dispatchEvents({response:events},true)}else if(data.m==="r"){let responseList=typeof data.data==="string"?JSON.parse(data.data):data.data;responseList=Array.isArray(responseList)?responseList:[responseList];responseList.forEach(response=>{const request=this.pending.get(response.tid);if(request){this.pending.delete(response.tid);request.callback(request,{response:response},response.error==null)}else{console.warn("Missing request for response ",response)}})}}catch(e){console.error(e)}}_onUnload(){if(this.channel){try{this.channel.postMessage({m:"end"})}catch(e){}this.channel.removeEventListener("message",this._messageHandler);this.channel.close()}}request(request){this.lastTid+=1;const rq={api:request.url.split("=")[1],data:request.data,call:request.intf+"."+request.method,tid:this.lastTid,proc:request.noResponse?true:undefined};if(!rq.proc){this.pending.set(this.lastTid,request)}else{request.callback(request,{response:{}},true)}try{this.channel.postMessage({m:"rq",rq:rq})}catch(e){}}}class AdRemEventManager{fireEvent(eventId,...args){eventId=eventId.toLowerCase();const listeners=this._events!=null?this._events.get(eventId):null;if(listeners!=null){listeners.forEach((listener,ix)=>{try{try{listener.fn.call(listener.scope,...args)}catch(e){console.error(e)}}finally{if(listener.fn.once){listeners.splice(ix,1)}}});if(listeners.length===0){this._events.delete(eventId)}}}once(eventId,fn,scope){return this.on(eventId,fn,scope,true)}on(eventId,fn,scope,once=false){if(fn==null){throw new Error("Invalid parameters")}if(Array.isArray(eventId)){eventId.forEach(e=>this.on(e,fn,scope))}else{eventId=eventId.toLowerCase();const ev=scope?{fn:fn,scope:scope,once:once}:{fn:fn,once:once},listeners=this._events.get(eventId);if(listeners==null){this._events.set(eventId,[ev])}else{listeners.push(ev)}}}un(eventId,fn,scope){if(fn==null){throw new Error("Invalid parameters")}if(Array.isArray(eventId)){eventId.forEach(e=>this.un(e,fn,scope))}else{eventId=eventId.toLowerCase();const listeners=this._events.get(eventId);if(listeners!=null){for(let i=listeners.length-1;i>=0;i-=1){const rec=listeners[i];if(rec.fn===fn&&rec.scope===scope){listeners.splice(i,1)}}if(listeners.length===0){this._events.delete(eventId)}}}}off(eventId,fn,scope){this.un(eventId,fn,scope)}hasListener(eventId){return this._events!=null&&this._events.has(eventId)}finalize(){this._events.clear()}}function EventManager(){this._events=new Map}Object.getOwnPropertyNames(AdRemEventManager.prototype).filter(name=>name!=="constructor").forEach(name=>EventManager.prototype[name]=AdRemEventManager.prototype[name]);function ModuleResources(path){if(path==null){const scripts=global.document?.getElementsByTagName("script");path=scripts[scripts.length-1].src.split("/").slice(0,-1).join("/")}fetch([path,"text.res.json"].join("/")).then(result=>result.json()).then(json=>adrem.extend(this,json))}function DynamicModule(moduleImport){this.__ready=moduleImport.then(module=>Object.assign(this,module))}function proxifyFunc(owner,name){const parent=owner[name];owner[name]=Object.assign(function fn(...args){return parent.call(owner,...args)},{asTask(...args){return parent._asTask.call(owner,parent.api,parent,...args)},asURL(...args){return parent._asURL.call(owner,parent.api,parent,...args)},asPromise(...args){return parent._asPromise.call(owner,parent.api,parent,...args)}})}function destroyHandler(){if(this.$$$destroyed!==true){this.$$$destroyed=true;this["@destroy"]();if(typeof this.__destroy__==="function"){this.__destroy__()}}}function RemoteClient(hostAddr,applicationId,connection){let _asyncId=1;const that=this;let remoteProvider;RemoteClient.inherited.constructor.apply(this);this.status={logged:false};this.connection=connection;this.connection.Client=this;function createRemoteObject(apiObj,actionName,instanceId){const obj=Object.create(connection[apiObj.name][actionName]);if(actionName!=="IObjAsyncCallTask"){Object.keys(Object.getPrototypeOf(obj)).filter(key=>typeof obj[key]==="function").forEach(name=>proxifyFunc(obj,name))}obj.id+="$"+instanceId;return obj}function asURL(objAPI,method){const params=Array.prototype.slice.call(arguments,2),action=this.id!=null?this.id.split(".")[1]:method.action;return objAPI.dataUrl+"/?method="+objAPI.name+"."+action+"."+method.method+"&params="+encodeURIComponent(JSON.stringify(params))+"&sid="+that.sid}function asPromise(objAPI,method,...args){return new Promise((resolve,reject)=>method.call(this,...args,resolve,reject))}const RequestHandler={checkStatus(){this.finished=false;this.GetStatus(result=>{Object.assign(this,result);if(this.finished){that.fireEvent(this.id,{eventid:0,data:this.reply},this)}else if(this.callback!=null){this.callback.call(this.scope,this);if(this.progressTask!=null){global.clearTimeout(this.progressTask)}this.progressTask=global.setTimeout(()=>{this.progressTask=null;this.checkStatus()},this.updateTime)}})},cancel(notify=false){if(!this.finished&&this.progressTask!=null){this.finished=true;global.clearTimeout(this.progressTask);this.progressTask=null}if(!notify){that.un(this.id,this.eventHandler,this)}},eventHandler(e){if(this.progressTask!=null){global.clearTimeout(this.progressTask)}this.finished=true;if(this.callback!=null){if(e.data!=null){Object.keys(e.data).forEach(key=>this[key]=e.data[key])}this.callback.call(this.scope,this)}that.un(this.id,this.eventHandler,this);this.destroy()},__destroy__(){that.fireEvent(this.id,{eventid:0},this);that.un(this.id,this.eventHandler,this);this.callback=null}};function asTask(objAPI,method,params){const request=new(findObj(objAPI.namespace,connection).IObjAsyncCallTask);let args,updateTime,callback,scope;if(isArgumentsAsObject(params)){args=params.params;updateTime=params.updateTime;callback=params.callback;scope=params.scope}else{let ix=arguments.length-1;updateTime=arguments[2];callback=arguments[ix];if(typeof callback!=="function"){scope=callback;callback=arguments[--ix]}args=Array.prototype.slice.call(arguments,3,ix)}if(method.len!==0&&args.length!==method.len){throw new Error("Invalid call parameters in task call "+this.id+"."+method.method)}Object.assign(request,{callback:callback,scope:scope||request,progress:0,updateTime:updateTime},RequestHandler);that.on(request.id,request.eventHandler,request);if(updateTime>0&&callback!==undefined){request.progressTask=global.setTimeout(()=>request.checkStatus(),updateTime)}request.Call(this.id.split(".").pop(),method.method,args,scope);return request}function bindClientCalls(me,api){let i,len;const actions=api.actions;let intf,new_cls,fn,ms,m,cls,aapi;function globalEventsEventId(id){return api.name+"#"+id.toString(16)}function NewObject(intface,initParam){let obj,ix,objId;initParam=initParam||null;if(arguments[2]===undefined||typeof arguments[2]==="function"||typeof arguments[2]==="object"){objId=_asyncId;_asyncId+=1;ix=2}else{ix=3;objId=arguments[2]}obj=createRemoteObject.call(me,api,intface,objId);if(initParam!==null){if(arguments.length>ix){obj["@create"].apply(this,Array.prototype.concat(initParam,Array.prototype.slice.call(arguments,ix)))}else{obj["@create"](initParam)}}return obj}for(intf in actions){if(Object.prototype.hasOwnProperty.call(actions,intf)){cls=findObj(api.namespace+"."+intf,connection);if(intf==="IGlobalEvents"){cls.eventId=globalEventsEventId}else if(intf!=="IClientServices"&&intf!=="Security"){if(cls.id===undefined){cls.id=api.name+"."+intf}if(cls.id.indexOf("$")<0){new_cls=NewObject.bind(that,intf);ms=actions[intf];for(i=0,len=ms.length;i<len;i+=1){m=ms[i];new_cls[m.name]=cls[m.name]}new_cls.id=cls.id;findObj(api.namespace,connection)[intf]=new_cls;cls=new_cls}ms=actions[intf];aapi=api.api!==undefined?api.api:api;for(i=0,len=ms.length;i<len;i+=1){fn=cls[ms[i].name];fn.api=aapi;fn._asTask=asTask;fn._asURL=asURL;fn._asPromise=asPromise;fn._cls=cls;fn.asTask=asTask.bind(cls,aapi,fn);fn.asURL=asURL.bind(cls,aapi,fn);fn.asPromise=asPromise.bind(cls,aapi,fn)}cls.destroy=destroyHandler}}}return api}function getRequestHandler(){return adrem.isEmbedded?embeddedRequestHandler:ajaxRequestHandler}this.initProvider=function(){if(this.isCloud!==adrem.isCloud){this.isCloud=adrem.isCloud;if(!adrem.isEmbedded){remoteProvider=new AdRemRemoteProvider(getRequestHandler(),25,connection);if(adrem.isCloud){remoteProvider=new AdRemServiceWorkerProvider(remoteProvider)}else{remoteProvider=new AdRemWebSocketProvider(remoteProvider)}}else{remoteProvider=new AdRemLocalProvider(getRequestHandler(),connection)}}};this.initProvider();this.initStorageKeys=function(appId){appId=appId||"app";if(appId.split(".")[1]!==undefined){appId=""}else{appId=":"+appId}appId=(hostAddr||"").split("/")[0]+appId;this.tokenKey="tid:"+appId;this.sidKey="sid:"+appId};this.initStorageKeys(applicationId);this.startEx=function({appPrefix,urlPrefix,headers,scope,callback}){const self=this,requestHandler=getRequestHandler(),sidItem=this.sidKey;function doNotify(status){if(typeof callback==="function"){callback.call(scope,status)}self.status=status;if(status.init&&self.connection.useWebSockets){remoteProvider.initMessageChannel()}self.fireEvent("clientstarted",status);if(status.logged){self.fireEvent("login",status)}}this.urlPrefix=urlPrefix||"";this.appPrefix=appPrefix||"";if(global.sessionStorage!=null){const sid=global.sessionStorage.getItem(sidItem);if(sid!=null&&sid!==""){that.sid=sid}}requestHandler(this,{url:(this.appPrefix!==""&&this.appPrefix[this.appPrefix.length-1]!=="/"?this.appPrefix+"/":this.appPrefix)+"api.json",headers:Object.assign({},headers,global.sessionStorage!=null?{"x-app-token":global.sessionStorage.getItem(this.tokenKey)||""}:null)},function(response,success){let aToken,data;if(success){data=response.response||JSON.parse(response.responseText);if(data.error!=null||data.type==="exception"){that.sid=null;doNotify({logged:false,init:false});return}if(data.api!=null&&Array.isArray(data.api)){data.api.forEach(api=>{api.namespace=api.name;api.url=api.url.replace("//","/");if(api.dataUrl!=null){api.dataUrl=api.dataUrl.replace("//","/")}that.addAPI(api)})}that.sid=data.sid;that.authentication=data.authentication;that.loggedIn=data.authenticated===true;if(global.sessionStorage!==undefined){global.sessionStorage.setItem(sidItem,that.sid)}if(that.loggedIn){doNotify({logged:true,init:true});return}if(self.connection.useWebSockets&&remoteProvider.channel==null){remoteProvider.initMessageChannel()}if("Session"in that){aToken=global.sessionStorage!==undefined?global.sessionStorage.getItem(that.tokenKey):undefined;if(aToken!==undefined&&aToken!==null){that.Session.Security.Authenticate(aToken,result=>{if(!result.Success){global.sessionStorage.removeItem(that.tokenKey)}else{global.sessionStorage.setItem(that.tokenKey,result.Token)}that.loggedIn=result.Success;doNotify({logged:result.Success,init:true})})}else{doNotify({logged:false,init:true})}}else{that.loggedIn=true;doNotify({logged:true,init:true})}}else{doNotify({logged:false,init:false})}});return false};this.start=function(){let ix=0;const params={urlPrefix:"",appPrefix:""};function splitURL(url){const appParts=url.split("/"),urlParts=appParts.splice(0,3);return{urlPrefix:urlParts.join("/")+"/",appPrefix:appParts.join("/")}}if(arguments.length>0){if(typeof arguments[ix]==="string"){const urlParts=splitURL(arguments[ix]);params.urlPrefix=urlParts.urlPrefix;params.appPrefix=urlParts.appPrefix;ix+=1}if(ix<arguments.length&&typeof arguments[ix]==="function"){params.callback=arguments[ix];ix+=1;if(ix<arguments.length&&typeof arguments[ix]==="object"){params.scope=arguments[ix]}}}else{params.scope=global}return this.startEx(params)};this.logout=function(callback,scope){if("Session"in that){global.sessionStorage?.removeItem(that.tokenKey);that.Session.Security.Logout(function(){if(typeof callback==="function"){callback.call(scope)}that.fireEvent("logout")})}else{throw new Error("No login support")}};this.loginEx=function({app,name,password,callback,scope}){function getPassword(pass){if(that.authentication!=="plain"){console.error("only plain authentication supported")}return pass}const _login=loginCallback=>{if(app!=null){that.Session.Security.LoginEx(app,name,getPassword(password),loginCallback,loginCallback)}else{that.Session.Security.Login(app,name,getPassword(password),loginCallback,loginCallback)}};if("Session"in that){_login(result=>{if(result.Success){global.sessionStorage?.setItem(that.tokenKey,result.Token);that.loggedIn=true}if(typeof callback==="function"){callback.call(scope||this,result.Success,result.Code)}that.fireEvent("login",{logged:result.Success,init:true,code:result.Code})})}else{throw new Error("No login support")}};this.login=function(name,password,callback,scope){that.loginEx({app:"unknown",name:name,password:password,callback:callback,scope:scope})};this.addAPI=function(api,force){let apiDef;if(api.api==null){if(connection.api===undefined){connection.api={}}if(connection.api[api.name]!==undefined&&force!==true){return}connection.api[api.name]=api;if(api.namespace!=null){findObj(api.namespace,connection)}}else{api.name=api.api.name}if(api.type==="local"){api.provider=new AdRemLocalProvider(localRequestHandler,connection);apiDef=new RemoteAPI(api,this)}else if(api.type==="remoting"){api.provider=remoteProvider;apiDef=new RemoteAPI(api,this)}else if(api.type==="polling"){api.provider=new AdremPollingProvider(api,getRequestHandler(),that)}if(api.type==="remoting"){bindClientCalls(apiDef,api)}return apiDef}}function RemoteAPI(api,client){const o=api.actions;let c,cls,m,ms,fn,i,len;this.url=api.url;this.namespace=findObj(api.namespace,client.connection);function handleRemoteResponse(request,result,success){let reply,ev;const method=request.intf+"."+request.method,callback=request.handler,errorHandler=request.errorHandler,scope=request.scope;function handledByCaller(param){return errorHandler!==undefined&&errorHandler(param)===true}if(success&&result&&(result.response!=null||result.responseText!=null)){reply=result.response||JSON.parse(result.responseText);if(reply.type==="exception"){if(!handledByCaller(reply.result)){ev=reply.result;if(ev){ev.method=method}client.fireEvent("exception",ev)}return}}else if(success){reply={result:{success:false}}}if(success===false){ev={classname:"xhr",method:method,message:"error calling: "+method};if(!handledByCaller(ev)){client.fireEvent("exception",ev)}}else if(success&&callback!==undefined&&callback.call!==undefined){if(typeof callback==="function"){callback.call(scope,reply.result)}}}this.remoteCall=function(intf,method,...args){let data,handler,errorHandler,scope,ix;const url=this.url;if(args[0]!==null&&isArgumentsAsObject(args[0])){const params=args[0];data=params.params;handler=params.callback;scope=params.scope;errorHandler=params.errorHandler}else{data=null;ix=args.length-1;if(ix>=0&&method.name[0]!=="@"){if(typeof args[ix]==="object"||args[ix]===undefined){scope=args[ix--]}if(ix>=0&&typeof args[ix]==="function"){handler=args[ix--]}if(ix>=0&&typeof args[ix]==="function"){errorHandler=handler;handler=args[ix--]}if(errorHandler==null&&handler==null&&scope!==undefined){scope=null;ix=args.length-1}}data=ix>=0?args.slice(0,ix+1):undefined}if(method.name[0]!=="@"){if(method.len>0&&(data==null||data.length!==method.len)){throw new Error("Invalid parameters passed to: "+intf.id+"."+method.name)}}api.provider.request({url:url,intf:intf.id.split(".").pop(),method:method.name,data:data,handler:handler,noResponse:typeof handler!=="function"&&typeof errorHandler!=="function",errorHandler:errorHandler,scope:scope,callback:handleRemoteResponse},true)};function getFunction(self,method){return function(...args){self.remoteCall(this,method,...args)}}for(c in o){if(Object.prototype.hasOwnProperty.call(o,c)){cls=findObj(api.namespace+"."+c,client.connection);cls.id=api.name+"."+c;ms=o[c];for(i=0,len=ms.length;i<len;i+=1){m=ms[i];fn=getFunction(this,m);fn.len=m.len;fn.action=c;fn.method=m.name;cls[m.name]=fn}}}}adrem.inherit=function(){const F=function(){};return function(C,P){F.prototype=P.prototype;C.prototype=new F;C.inherited=P.prototype;C.prototype.constructor=C}}();adrem.ModuleResources=ModuleResources;adrem.DynamicModule=DynamicModule;adrem.EventManager=EventManager;adrem.inherit(RemoteClient,adrem.EventManager);adrem.loadScript=function(url){return new Promise(resolve=>{const script=Object.assign(global.document?.createElement("script"),{type:"text/javascript",onload:()=>resolve(),src:url});global.document?.head.appendChild(script)})};adrem.loadStyleSheet=function(url,media="screen",loading="lazy"){return new Promise(resolve=>{const cssLink=Object.assign(global.document?.createElement("link"),{href:url,rel:"stylesheet",loading:loading,media:media,type:"text/css",onload:()=>resolve()});global.document?.head.appendChild(cssLink)})};adrem.initClient=function(aHost,aAppId,connection){connection=connection||adrem;if(connection!==adrem&&connection.useWebSockets==null){connection.useWebSockets=adrem.useWebSockets&&global.WebSocket!=null}connection.pageUrl=aHost;connection.$host=aHost;connection.reloadOnLogout=adrem.reloadOnLogout;connection.Client=new RemoteClient(aHost,aAppId,connection);connection.Client.isEmbedded=adrem.isEmbedded;connection.Client.sid=null;return connection};function Connection(aHost,aAppId){return adrem.initClient(aHost,aAppId,this)}adrem.Connection=Connection;if(!isNodeJS){adrem.$visible=true;if(global.location!==undefined){adrem.initClient(global.location.host,global.location.pathname.split("/")[1],adrem)}Object.defineProperty(adrem,"isVisible",{get(){return adrem.$visible&&(global.document?.visibilityState==null||global.document?.visibilityState==="visible")},set(value){if(value!==adrem.$visible){adrem.$visible=value;adrem.Client.fireEvent("$visible",value)}}});if(global.document?.visibilityState!=null){global.document?.addEventListener("visibilitychange",()=>adrem.Client.fireEvent("$visible",global.document?.visibilityState==="visible"))}}else{if(typeof module==="object"){module.exports.adrem=adrem}adrem.isVisible=true}if(adrem.isEmbedded){adrem.DispatchRequest=function(obj,result){obj.callback(obj,true,result)}}global.adrem=adrem;return adrem});