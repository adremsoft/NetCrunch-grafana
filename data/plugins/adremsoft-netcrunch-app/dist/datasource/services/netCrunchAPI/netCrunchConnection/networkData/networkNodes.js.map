{"version":3,"sources":["../../../../../../src/datasource/services/netCrunchAPI/netCrunchConnection/networkData/networkNodes.js"],"names":["NetCrunchNodesOperations","PRIVATE_PROPERTIES","map","Symbol","array","NetCrunchNodes","Map","node","set","id","push","result","allNodesId","forEach","nodeId","has","get"],"mappings":"uVAQSA,wB,kBAAAA,wB,ugBAGPC,kB,CAAqB,CACnBC,IAAKC,OAAO,KAAP,CADc,CAEnBC,MAAOD,OAAO,OAAP,CAFY,C,0BAKjBE,c,YAEJ,yBAAc,sCACZ,KAAKJ,mBAAmBC,GAAxB,EAA+B,GAAII,IADvB,CAEZ,KAAKL,mBAAmBG,KAAxB,IACD,C,8DAEGG,C,CAAM,CACR,KAAKN,mBAAmBC,GAAxB,EAA6BM,GAA7B,CAAiCD,EAAKE,EAAtC,CAA0CF,CAA1C,CADQ,CAER,KAAKN,mBAAmBG,KAAxB,EAA+BM,IAA/B,CAAoCH,CAApC,CACD,C,kCAEoB,gBAAZL,CAAY,wDAAN,IAAM,CAEnB,GAAW,IAAP,GAAJ,CAAiB,CACf,GAAMS,KAAN,CAOA,MALAT,GAAIU,UAAJ,CAAeC,OAAf,CAAuB,SAACC,CAAD,CAAY,CAC7B,MAAKb,mBAAmBC,GAAxB,EAA6Ba,GAA7B,CAAiCD,CAAjC,CAD6B,EAE/BH,EAAOD,IAAP,CAAY,MAAKT,mBAAmBC,GAAxB,EAA6Bc,GAA7B,CAAiCF,CAAjC,CAAZ,CAEH,CAJD,CAKA,CAAOH,CACR,CAED,MAAO,MAAKV,mBAAmBG,KAAxB,CACR,C,qCAEa,CACZ,MAAO,MAAKH,mBAAmBG,KAAxB,CACR,C,oCAEWU,C,CAAQ,CAClB,MAAO,MAAKb,mBAAmBC,GAAxB,EAA6Bc,GAA7B,CAAiCF,CAAjC,CACR,C,kCAEgB,CAAmB;AAClC,MAAOd,yBACR,C,gDAKDK,c","file":"networkNodes.js","sourcesContent":["/**\r\n * @license\r\n * Copyright AdRem Software. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an Apache License, Version 2.0 that can be\r\n * found in the LICENSE file.\r\n */\r\n\r\nimport { NetCrunchNodesOperations } from './nodesOperations';\r\n\r\nconst\r\n  PRIVATE_PROPERTIES = {\r\n    map: Symbol('map'),\r\n    array: Symbol('array')\r\n  };\r\n\r\nclass NetCrunchNodes {\r\n\r\n  constructor() {\r\n    this[PRIVATE_PROPERTIES.map] = new Map();\r\n    this[PRIVATE_PROPERTIES.array] = [];\r\n  }\r\n\r\n  add(node) {\r\n    this[PRIVATE_PROPERTIES.map].set(node.id, node);\r\n    this[PRIVATE_PROPERTIES.array].push(node);\r\n  }\r\n\r\n  mapNodes(map = null) {\r\n\r\n    if (map != null) {\r\n      const result = [];\r\n\r\n      map.allNodesId.forEach((nodeId) => {\r\n        if (this[PRIVATE_PROPERTIES.map].has(nodeId)) {\r\n          result.push(this[PRIVATE_PROPERTIES.map].get(nodeId));\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n\r\n    return this[PRIVATE_PROPERTIES.array];\r\n  }\r\n\r\n  getAllNodes() {\r\n    return this[PRIVATE_PROPERTIES.array];\r\n  }\r\n\r\n  getNodeById(nodeId) {\r\n    return this[PRIVATE_PROPERTIES.map].get(nodeId);\r\n  }\r\n\r\n  get operations() {                  // eslint-disable-line\r\n    return NetCrunchNodesOperations;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  NetCrunchNodes\r\n};\r\n"]}